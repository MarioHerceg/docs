#!/bin/bash

print_help () {
    echo "Usage: $0 [--standalone]"
    echo -e "\t--standalone\tGenerate standalone HTML documents."
    echo -e "\t-h|--help\tPrint help."
}

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

versions=("v0.1.2" "v1.0.0")
# Parse inputs.
standalone=0
if [[ $# -gt 1 ]]; then
    print_help
    exit 1
elif  [[ $# -eq 1 ]]; then
    case "$1" in
        --standalone)
            standalone=1
        ;;
        -h|--help)
            print_help
            exit 0
        ;;
        *)
            print_help
            exit 1
        ;;
    esac
fi

# Generate output folders.
mkdir -p ${script_dir}/../../output/html/lab

# Initialize HTML gen environment.
if [ ! -d "${script_dir}/ve3" ]; then
    virtualenv -p python3 ve3 || exit 1
    source ve3/bin/activate
    pip install -r ${script_dir}/requirements.txt || exit 1
    deactivate
fi

fail_with_msg () {
    echo ${1}
    exit 1
}

add_link_info () {
    local resource_dir=$(dirname $1)
    if [[ ${resource_dir} == "." ]]; then
        resource_dir=""
    else
        resource_dir="${resource_dir}/"
    fi
    (( $standalone )) && \
    echo "--metadata=html_link_suffix:'' --metadata=html_link_prefix:'.html'" || \
    echo "--metadata=html_link_suffix:'/docs/lab/${version}/${resource_dir}' --metadata=html_link_prefix:''"
}

dump_html () {
    # Info about the relative path has to be preserved because non standalone
    # generator depends on that.
    local src_dir=$1
    local src_relpath=$2
    local dst_dir=$3
    local dst_relpath=$4
    pandoc ${src_dir}/${src_relpath} \
        --from markdown --to html \
        --output ${dst_dir}/${dst_relpath} \
        --filter ${script_dir}/links_filter.py \
        $(add_link_info ${dst_relpath}) || fail_with_msg "Failed to generate ${dst_relpath}!"
}

generate_version () {
    version=$1
    input_dir=${script_dir}/../../products/lab/${version}
    output_dir=${script_dir}/../../output/html/lab/${version}

    rm -rf ${output_dir}
    mkdir -p ${output_dir}
    mkdir -p ${output_dir}/data
    cd ${script_dir}
    source ve3/bin/activate || exit 1

    cp -r ${input_dir}/data/* ${output_dir}/data/
    dump_html ${input_dir} "README.md" ${output_dir} "index.html"
    dump_html ${input_dir} "LICENSE.md" ${output_dir} "license.html"
    dump_html ${input_dir} "how_to_install_memgraph_lab_on_macos.md" ${output_dir} "how_to_install_memgraph_lab_on_macos.html"
    echo "Output Diractory: $output_dir"
}

cd ${script_dir}
source ve3/bin/activate || exit 1
dump_html ${script_dir}/../../products/lab "CHANGELOG.md" ${script_dir}/../../output/html/lab "changelog.html"
for version in "${versions[@]}"; do
    generate_version ${version}
done
